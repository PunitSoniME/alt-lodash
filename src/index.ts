import * as array from './array';
import * as collection from './collection';
import * as math from './math';
import * as numberMethods from './number';
import * as stringMethods from './string';
import * as lang from './lang';

import {
	chunk,
	compact,
	concat,
	difference,
	differenceBy,
	drop,
	dropRight,
	first,
	fill,
	findIndex,
	findLastIndex,
	flatten,
	flattenDeep,
	flattenDepth,
	fromPairs,
	head,
	indexOf,
	initial,
	intersection,
	join,
	last,
	lastIndexOf,
	nth,
	pull,
	pullAll,
	pullAt,
	remove,
	reverse,
	slice,
	sortedIndex,
	sortedUniq,
	sortedUniqBy,
	tail,
	take,
	takeRight,
	takeRightWhile,
	takeWhile,
	union,
	uniq,
	unzip,
	unzipWith,
	without,
	zip,
	zipObject,
} from './array';

import {
	add,
	ceil,
	divide,
	floor,
	max,
	maxBy,
	mean,
	meanBy,
	min,
	minBy,
	multiply,
	round,
	subtract,
	sum,
	sumBy,
} from './math';

import {
	countBy,
	each,
	eachRight,
	every,
	filter,
	find,
	findLast,
	flatMap,
	flatMapDeep,
	flatMapDepth,
	forEach,
	forEachRight,
	groupBy,
	includes,
	keyBy,
	map,
	orderBy,
	partition,
	reduce,
	reduceRight,
	reject,
	sample,
	sampleSize,
	shuffle,
	size,
	some,
} from './collection';

import { clamp, inRange, random } from './number';

import {
	castArray,
	clone,
	cloneDeep,
	conformsTo,
	// eq,
	gt,
	gte,
	isArray,
	isArrayBuffer,
	isArrayLike,
	isArrayLikeObject,
	isBoolean,
	isBuffer,
	isDate,
	isElement,
	isEmpty,
	isEqual,
	isError,
	isFinite,
	isFunction,
	isInteger,
	isLength,
	isMap,
	// isMatch,
	isNaN,
	isNative,
	isNil,
	isNull,
	isNumber,
	isObject,
	isObjectLike,
	isPlainObject,
	isRegExp,
	isSafeInteger,
	isSet,
	isString,
	isSymbol,
	isTypedArray,
	isUndefined,
	isWeakMap,
	isWeakSet,
	lt,
	lte,
} from './lang';

import {
	camelCase,
	capitalize,
	endsWith,
	kebabCase,
	lowerCase,
	lowerFirst,
	padEnd,
	padStart,
	parseInt,
	repeat,
	replace,
	snakeCase,
	split,
	startCase,
	startsWith,
	toLower,
	toUpper,
	trim,
	trimEnd,
	trimStart,
	upperCase,
	upperFirst,
} from './string';

const _ = {
	//	Array Methods
	...array,

	//	Collection Methods
	...collection,

	//	Math Methods
	...math,

	//	Number Methods
	...numberMethods,

	//	String Methods
	...stringMethods,

	//	Lang Methods
	...lang,
};

export {
	//	Array Methods
	chunk,
	compact,
	concat,
	difference,
	differenceBy,
	drop,
	dropRight,
	first,
	fill,
	findIndex,
	findLastIndex,
	flatten,
	flattenDeep,
	flattenDepth,
	fromPairs,
	head,
	indexOf,
	initial,
	intersection,
	join,
	last,
	lastIndexOf,
	nth,
	pull,
	pullAll,
	pullAt,
	remove,
	reverse,
	slice,
	sortedIndex,
	sortedUniq,
	sortedUniqBy,
	tail,
	take,
	takeRight,
	takeRightWhile,
	takeWhile,
	union,
	uniq,
	unzip,
	unzipWith,
	without,
	zip,
	zipObject,
	// Math Methods
	add,
	ceil,
	divide,
	floor,
	max,
	maxBy,
	mean,
	meanBy,
	min,
	minBy,
	multiply,
	round,
	subtract,
	sum,
	sumBy,
	// Collection Methods
	countBy,
	each,
	eachRight,
	every,
	filter,
	find,
	findLast,
	flatMap,
	flatMapDeep,
	flatMapDepth,
	forEach,
	forEachRight,
	groupBy,
	includes,
	keyBy,
	map,
	orderBy,
	partition,
	reduce,
	reduceRight,
	reject,
	sample,
	sampleSize,
	shuffle,
	size,
	some,
	//	Number Methods
	clamp,
	inRange,
	random,
	//	String Methods
	camelCase,
	capitalize,
	endsWith,
	kebabCase,
	lowerCase,
	lowerFirst,
	padEnd,
	padStart,
	parseInt,
	repeat,
	replace,
	snakeCase,
	split,
	startCase,
	startsWith,
	toLower,
	toUpper,
	trim,
	trimEnd,
	trimStart,
	upperCase,
	upperFirst,
	//	Lang Methods
	castArray,
	clone,
	cloneDeep,
	conformsTo,
	// eq,
	gt,
	gte,
	isArray,
	isArrayBuffer,
	isArrayLike,
	isArrayLikeObject,
	isBoolean,
	isBuffer,
	isDate,
	isElement,
	isEmpty,
	isEqual,
	isError,
	isFinite,
	isFunction,
	isInteger,
	isLength,
	isMap,
	// isMatch,
	isNaN,
	isNative,
	isNil,
	isNull,
	isNumber,
	isObject,
	isObjectLike,
	isPlainObject,
	isRegExp,
	isSafeInteger,
	isSet,
	isString,
	isSymbol,
	isTypedArray,
	isUndefined,
	isWeakMap,
	isWeakSet,
	lt,
	lte,
};

export default _;
